@model Review
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Identity;
@inject IHtmlLocalizer<SharedResource> Localizer
@inject UserManager<ApplicationUser> userManager
@{
    var appUser = await userManager.GetUserAsync(User);
    ViewData["Title"] = @Localizer["Review"];
}

<div class="container-fluid ">
    <div class="row">
        <div class="col-md-9">
            <h1>@Model.Title</h1>
            <h2>By <a href="/User/@Model.Author.Id">@Model.Author.UserName</a> on @Model.PublicationDate.ToString("MMM dd, yyyy")
                @if (Model.Author == await userManager.GetUserAsync(User))
                {
                    <a asp-action="EditReview" asp-route-id="@Model.Id">Edit</a>
                }
            </h2>
            <h5 id="tagsLine" class="mt-3 mb-3"></h5>
            @if (Model.Tags.Count > 0)
            {
                <script>
                    addAllTags("@string.Join(',', @Model.Tags.Select(t => t.Body))");
                </script>
            }
            <h1>
                <span class="badge bg-success">
                    @Model.Score.Value/10
                </span>
            </h1>
        </div>
        <div class="col-md align-content-end align-items-end text-end">
            <h3>Cover here</h3>
            <h3>Cover here</h3>
            <h3>Cover here</h3>
            <h3>Cover here</h3>
            <h5>@Model.Product.Title</h5>
            <h6>@Model.Product.Type | @Model.Product.ReleaseYear</h6>
            <h4>0/10 |0/5</h4>
            <h4 class="mt-3">Your score</h4>
            @for (int i = 1; i <= 5; i++)
            {
                <a role="button" class="btn btn-sm btn-light mb-1" style="max-width:28px; max-height:28px" name="rateBtn" onclick="changeRateProd('@i', '@Model.Product.Id')">
                    <img src="~/icons/star.svg" style="max-width:21px; max-height:21px" aria-hidden="true" />
                </a>
            }
            @{
                var s = Model.Product.UserScores.SingleOrDefault(s => s.Sender == appUser);
                if (s != null)
                {
                    <script>
                        setInitRateProd('@s.Value');
                    </script>
                }
            }
        </div>
    </div>
    <hr />
    @Html.Raw(@Model.Body)
    <hr />
    <div class="row">
        <div class="col-md-9">
            <h2><a href="/User/@Model.Author.Id">@Model.Author.UserName</a> on @Model.PublicationDate.ToString("MMM dd, yyyy")</h2>
        </div>
        <div class="col-md align-content-end align-items-end text-end">
            <h2>
                <a role="button" class="btn btn-light" style="min-width:100px" onclick="changeLike('@Model.Id')">
                    @if (Model.Likes.Count > 0)
                    {
                        var id = User.Claims.First().Value;
                        if (Model.Likes.SingleOrDefault(l => l.SenderId == id) == null)
                        {
                            <img id="likeIcon" src="~/icons/thumb.svg" aria-label="" style="max-width:24px; max-height:24px;">
                        }
                        else
                        {
                            <img id="likeIcon" src="~/icons/thumb black.svg" aria-label="Liked" style="max-width:24px; max-height:24px;">
                        }
                        @Model.Likes.Count
                    }
                    else
                    {
                        <img id="likeIcon" src="~/icons/thumb.svg" aria-label="" style="max-width:24px; max-height:24px;">
                    }
                </a>
            </h2>
        </div>
    </div>
    <div id="reviewComments">
        @await Html.PartialAsync("ReviewComments", (Model.Comments.TakeLast(5), Model.Id, Model.Comments.Count))
    </div>
</div>
